{"version":3,"file":"contentScript.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,mBAAmB,eAAe;AAClC;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sC","sources":["webpack://llm-agent-extension/./src/contentScript.js"],"sourcesContent":["// Content script for Snip Chrome Extension\n// This script runs in the context of web pages and handles:\n// - Page content extraction\n// - Communication with the sidebar\n// - Tab/link context management\n\nconsole.log('Snip: Content script loaded');\n\n// Track current page info\nlet currentPageData = {\n  url: window.location.href,\n  title: document.title,\n  content: '',\n  timestamp: Date.now()\n};\n\n// Extract page content for LLM context\nconst extractPageContent = () => {\n  // Get main content, avoiding navigation, ads, etc.\n  const content = document.body.innerText || document.body.textContent || '';\n  \n  // Clean up content - remove extra whitespace\n  const cleanContent = content.replace(/\\s+/g, ' ').trim();\n  \n  return {\n    url: window.location.href,\n    title: document.title,\n    content: cleanContent,\n    timestamp: Date.now()\n  };\n};\n\n// Send page data to extension\nconst sendPageData = (data) => {\n  chrome.runtime.sendMessage({\n    type: 'PAGE_DATA',\n    data: data\n  });\n};\n\n// Listen for messages from extension\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  if (request.type === 'GET_PAGE_CONTENT') {\n    const pageData = extractPageContent();\n    sendResponse(pageData);\n  } else if (request.type === 'ADD_CURRENT_PAGE') {\n    const pageData = extractPageContent();\n    sendPageData(pageData);\n    sendResponse({ success: true });\n  }\n});\n\n// Initialize when page loads\nwindow.addEventListener('DOMContentLoaded', () => {\n  console.log('Snip: Page loaded, ready to extract content');\n  currentPageData = extractPageContent();\n});\n\n// Handle navigation changes\nlet lastUrl = window.location.href;\nconst checkForNavigation = () => {\n  if (lastUrl !== window.location.href) {\n    console.log('Snip: Navigation detected');\n    lastUrl = window.location.href;\n    currentPageData = extractPageContent();\n  }\n};\n\n// Check for navigation changes periodically\nsetInterval(checkForNavigation, 1000);"],"names":[],"sourceRoot":""}